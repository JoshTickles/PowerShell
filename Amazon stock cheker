<#
.SYNOPSIS
    A simple script to find out when a item is back in stock on Amazon. 
.DESCRIPTION
    Insert the product number (found in the items URL e.g. B000TYTP3U), the script will then download and scan the
    webpage content looking for the text "Add to Cart" which is only found on pages that have stock available to purchase. 
    The script runs continuously checking every x (definable) seconds, and returns the results. 
.NOTES
    Author: Josh Angel
    Date: November 2014
    Issues: Script still runs if incorrect product number is entered however you will see a 404 error whilst the script attempts
            to download the webpage source to the variable. It is also not not ideal to query for the term "Add To Cart" as this may 
            appear incorrectly on items not in stock from Amazon but in stock from 3rd party sellers.
            
#>

$Host.UI.RawUI.WindowTitle = "Amazon Stock Checker - Josh 2014"
$query = "Add To Cart"
# Prompt user input for product number and interval.
$product = Read-Host "Enter Amazon product number"
$time = Read-Host "Enter checking interval in seconds"
Write-Host "Checking product number."
start-sleep 1
Write-Host "Downloading page content."
start-sleep 2 
Write-Host "Checking for stock."

# Provide Powershell the complete webpage and save to variable
$uri = "http://www.amazon.com/gp/product/" + $product
$AmazonPage = new-object System.Net.WebClient
# Creates endless loop of below function.
While ($true)
{
# Download the webpage content to a string value making it searchable.
$pagecontent = $AmazonPage.DownloadString($uri);
"--------------------------------"
# Check page contence for match.
if ($pagecontent -match $query)
{write-host "Item $product is in stock" -foregroundcolor Green}
else
{write-host "Item $product is out of stock" -foregroundcolor Red}
[datetime]::Now.tostring()
Start-sleep $time
}

#End
